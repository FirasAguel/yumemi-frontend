name: CI/CD Pipeline

on:
  push:
    branches:
      - feat/deployment
  pull_request:
    branches:
      - dev

jobs:
  lint-and-test:
    runs-on: ubuntu-24.04

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22.13.1

      # Step 3: Install pnpm
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.0.0

      # Step 4: Install dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Step 5: Run Prettier
      - name: Check formatting with Prettier
        run: pnpm prettier --check .

      # Step 6: Run ESLint
      - name: Lint code with ESLint
        run: pnpm lint

      # Step 7: TypeScript Type Check
      - name: TypeScript type checking
        run: pnpm tsc --noEmit

      # Step 8: Build the Next.js app
      - name: Build Next.js app
        run: pnpm build

  build-and-deploy:
    runs-on: ubuntu-24.04
    needs: lint-and-test
    permissions:
      packages: write

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # Step 3: Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker buildx build --no-cache --platform linux/amd64 -t ghcr.io/firasaguel/yumemi-frontend:latest .
          docker push ghcr.io/firasaguel/yumemi-frontend:latest

      # Step 4: Deploy to VPS
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/firasaguel/yumemi-frontend:latest
            docker stop yumemi-frontend
            docker rm yumemi-frontend
            docker run -d --name yumemi-frontend -p 3001:3000 ghcr.io/firasaguel/yumemi-frontend:latest
